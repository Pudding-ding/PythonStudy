#1.面向对象和面向过程的区别
#面向过程（手洗衣服）：需要实现一个功能的时候，着重的是过程，分析出一个个步骤，并把一个个步骤
#                  用一个个函数实现，再依次去调用一个个函数即可（每一个步骤都需要亲力亲为）
#面向对象（机洗衣服）：需要实现一个功能的时候，着重的是谁去帮我做这件事情（偷懒，找别人帮我做）

#2.类和对象
# 类就是对一系列具有相同属性和行为的事物的统称，不是真实存在的事务
# 对象就是类的具体表现，是类创建出来的真实存在的事物，也是面向对象编程思想的核心。
#在开发过程中，先有类，再有对象
#2.1类的三要素
#1.类名
#2.属性：对象的特征描述，用来说明是什么样子的
#3.方法：对象具有的功能（行为），用来说明能够做什么
#举例：
#类名：人类
#属性：身高、体重、年龄
#方法：走路、说话、学习
#类名：洗衣机类
#属性：长度、宽度、高度
#方法：洗衣服
#2.2定义类
#基本格式
#class 类名：#类名必须符合标识符规定，同时遵循大驼峰命名法，见名知意
#    代码块
#洗衣机类
# class washer:
#     height = 800 #类属性：就是类所拥有的属性
# #查看类属性：类名，属性名
# print(washer.height)
# #新增类属性：类名.属性名 = 值
# washer.width = 150
# print(washer.width)
#2.3 创建对象
#创建对象的过程也叫做实例化对象
#实例化对象的基本格式：对象名 = 类名()
#实例化一个洗衣机对象
# wa = washer()
# print(wa)#显示的对象在内存中的地址
# #第二次实例化
# wa2 = washer()
# print(wa2)
# #内存地址不一样，说明是不同的对象，可以实例化多个对象

#2.4实例方法和实例属性
#2.4.1 实例方法
#由对象调用，至少有一个self参数，执行实例方法的时候，自动将调用该方法的对象赋值给self
class washer:
    height = 800  #类属性
    def wash(self):  #self擦拭农户是类中的实例方法必须具备的
        print('我会洗衣服')
        print('方法中的self:',self)  #self表示当前调用该方法的对象
#实例化对象
wa = washer()
print('wa:',wa)
#对象调用类中方法
wa.wash()
wa2 = washer()
print('wa2:',wa2)
wa2.wash()
#self代表对象本身，当对象调用实例方法时，
#python会自动将对象本身引用作为参数，传递到实例方法的第一个参数self里面





